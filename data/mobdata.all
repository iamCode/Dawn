wolfbase = DawnInterface.createNewMobType("Wolf")
wolfbase:setNumMoveTexturesPerDirection( ActivityType.Walking, 8 );
for index=0,7,1 do
	wolfbase:setMoveTexture( ActivityType.Walking, N, index, "data/character/wolf/running n000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, NW, index, "data/character/wolf/running nw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, W, index, "data/character/wolf/running w000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, SW, index, "data/character/wolf/running sw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, S, index, "data/character/wolf/running s000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, SE, index, "data/character/wolf/running se000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, E, index, "data/character/wolf/running e000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Walking, NE, index, "data/character/wolf/running ne000"..index..".tga" );
end
wolfbase:setNumMoveTexturesPerDirection( ActivityType.Attacking, 9 );
for index=0,8,1 do
	wolfbase:setMoveTexture( ActivityType.Attacking, N, index, "data/character/wolf/attacking n000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, NW, index, "data/character/wolf/attacking nw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, W, index, "data/character/wolf/attacking w000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, SW, index, "data/character/wolf/attacking sw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, S, index, "data/character/wolf/attacking s000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, SE, index, "data/character/wolf/attacking se000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, E, index, "data/character/wolf/attacking e000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Attacking, NE, index, "data/character/wolf/attacking ne000"..index..".tga" );
end
wolfbase:setNumMoveTexturesPerDirection( ActivityType.Casting, 9 );
for index=0,8,1 do
	wolfbase:setMoveTexture( ActivityType.Casting, N, index, "data/character/wolf/attacking n000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, NW, index, "data/character/wolf/attacking nw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, W, index, "data/character/wolf/attacking w000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, SW, index, "data/character/wolf/attacking sw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, S, index, "data/character/wolf/attacking s000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, SE, index, "data/character/wolf/attacking se000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, E, index, "data/character/wolf/attacking e000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Casting, NE, index, "data/character/wolf/attacking ne000"..index..".tga" );
end
wolfbase:setNumMoveTexturesPerDirection( ActivityType.Dying, 9 );
for index=0,8,1 do
	wolfbase:setMoveTexture( ActivityType.Dying, N, index, "data/character/wolf/dying n000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, NW, index, "data/character/wolf/dying nw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, W, index, "data/character/wolf/dying w000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, SW, index, "data/character/wolf/dying sw000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, S, index, "data/character/wolf/dying s000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, SE, index, "data/character/wolf/dying se000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, E, index, "data/character/wolf/dying e000"..index..".tga" );
	wolfbase:setMoveTexture( ActivityType.Dying, NE, index, "data/character/wolf/dying ne000"..index..".tga" );
end

wolfbase:setStrength( 15 )
wolfbase:setDexterity( 25 )
wolfbase:setVitality( 15 )
wolfbase:setIntellect( 10 )
wolfbase:setWisdom( 10 )
wolfbase:setMaxHealth( 250 )
wolfbase:setMaxMana( 500 )
wolfbase:setMaxFatigue( 100 )
wolfbase:setHealthRegen( 0 )
wolfbase:setManaRegen( 50 )
wolfbase:setFatigueRegen( 25 )
wolfbase:setMinDamage( 5 )
wolfbase:setMaxDamage( 10 )
wolfbase:setArmor( 20 )
wolfbase:setDamageModifierPoints( 0 )
wolfbase:setHitModifierPoints( 0 )
wolfbase:setEvadeModifierPoints( 0 )
wolfbase:setName("A wolf")
wolfbase:setWanderRadius( 250 )
wolfbase:setLevel( 2 )
wolfbase:setCoinDrop( 1, 3, 0.75 );
wolfbase:setClass( CharacterClass.Warrior );
wolfbase:inscribeSpellInSpellbook( spellDatabase["wolfbite"] );
wolfbase:inscribeSpellInSpellbook( spellDatabase["rabidbite"] );

wolfpup = DawnInterface.createNewMobType("Wolf Pup")
wolfpup:baseOnType("Wolf")
wolfpup:modifyStrength( -2 )
wolfpup:modifyDexterity( -5 )
wolfpup:modifyVitality( -1 )
wolfpup:modifyIntellect( -5 )
wolfpup:modifyWisdom( -5 )
wolfpup:modifyMaxHealth( -100 )
wolfpup:setMinDamage( 3 )
wolfpup:setMaxDamage( 6 )
wolfpup:setArmor( 10 )
wolfpup:setName("A wolf pup")
wolfpup:setWanderRadius( 250 )
wolfpup:setLevel( 1 )
wolfpup:addItemToLootTable( itemDatabase["shadering"], 0.25 )
wolfpup:addItemToLootTable( itemDatabase["arustysword"], 0.25 )

giantwolf = DawnInterface.createNewMobType("Giant Wolf")
giantwolf:baseOnType("Wolf")
giantwolf:modifyStrength( 10 )
giantwolf:modifyDexterity( 5 )
giantwolf:modifyVitality( 20 )
giantwolf:modifyIntellect( 10 )
giantwolf:modifyWisdom( 4 )
giantwolf:modifyMaxHealth( 150 )
giantwolf:setMinDamage( 10 )
giantwolf:setMaxDamage( 20 )
giantwolf:setArmor( 50 )
giantwolf:setName("A giant wolf")
giantwolf:setWanderRadius( 50 )
giantwolf:setLevel( 5 )

humanbase = DawnInterface.createNewMobType("Human")
humanbase:setNumMoveTexturesPerDirection( ActivityType.Walking, 8 );
for index=0,7,1 do
	humanbase:setMoveTexture( ActivityType.Walking, N, index, "data/character/swordsman/walking n000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, NW, index, "data/character/swordsman/walking nw000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, W, index, "data/character/swordsman/walking w000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, SW, index, "data/character/swordsman/walking sw000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, S, index, "data/character/swordsman/walking s000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, SE, index, "data/character/swordsman/walking se000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, E, index, "data/character/swordsman/walking e000"..index..".tga" );
	humanbase:setMoveTexture( ActivityType.Walking, NE, index, "data/character/swordsman/walking ne000"..index..".tga" );
end

humanbase:setNumMoveTexturesPerDirection( ActivityType.Dying, 9 );
for index=0,8,1 do
	humanbase:setMoveTexture( ActivityType.Dying, N, index, "data/character/swordsman/dying n000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, NW, index, "data/character/swordsman/dying nw000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, W, index, "data/character/swordsman/dying w000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, SW, index, "data/character/swordsman/dying sw000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, S, index, "data/character/swordsman/dying s000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, SE, index, "data/character/swordsman/dying se000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, E, index, "data/character/swordsman/dying e000"..index..".tga", -16, -16 );
	humanbase:setMoveTexture( ActivityType.Dying, NE, index, "data/character/swordsman/dying ne000"..index..".tga", -16, -16 );
end

humanbase:setBoundingBox( 18, 20, 64, 64 );
humanbase:setUseBoundingBox( true );

humanbase:setStrength( 15 )
humanbase:setDexterity( 25 )
humanbase:setVitality( 15 )
humanbase:setIntellect( 10 )
humanbase:setWisdom( 10 )
humanbase:setMaxHealth( 250 )
humanbase:setMaxMana( 500 )
humanbase:setMaxFatigue( 100 )
humanbase:setHealthRegen( 0 )
humanbase:setManaRegen( 50 )
humanbase:setFatigueRegen( 25 )
humanbase:setMinDamage( 5 )
humanbase:setMaxDamage( 10 )
humanbase:setArmor( 20 )
humanbase:setDamageModifierPoints( 0 )
humanbase:setHitModifierPoints( 0 )
humanbase:setEvadeModifierPoints( 0 )
humanbase:setName("A swordsman")
humanbase:setWanderRadius( 250 )
humanbase:setLevel( 2 )
humanbase:setClass( CharacterClass.Warrior );

wizardbase = DawnInterface.createNewMobType("Wizard")

wizardbase:setNumMoveTexturesPerDirection( ActivityType.Walking, 8 );
for index=0,7,1 do
	wizardbase:setMoveTexture( ActivityType.Walking, N, index, "data/character/wizard/walking n000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, NW, index, "data/character/wizard/walking nw000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, W, index, "data/character/wizard/walking w000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, SW, index, "data/character/wizard/walking sw000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, S, index, "data/character/wizard/walking s000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, SE, index, "data/character/wizard/walking se000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, E, index, "data/character/wizard/walking e000"..index..".tga" );
	wizardbase:setMoveTexture( ActivityType.Walking, NE, index, "data/character/wizard/walking ne000"..index..".tga" );
end
wizardbase:setNumMoveTexturesPerDirection( ActivityType.Dying, 13 );
for index=0,12,1 do
	wizardbase:setMoveTexture( ActivityType.Dying, N, index, "data/character/wizard/dying n000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, NW, index, "data/character/wizard/dying nw000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, W, index, "data/character/wizard/dying w000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, SW, index, "data/character/wizard/dying sw000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, S, index, "data/character/wizard/dying s000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, SE, index, "data/character/wizard/dying se000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, E, index, "data/character/wizard/dying e000"..index..".tga", -16, -16 );
	wizardbase:setMoveTexture( ActivityType.Dying, NE, index, "data/character/wizard/dying ne000"..index..".tga", -16, -16 );
end

wizardbase:setBoundingBox( 18, 20, 64, 64 );
wizardbase:setUseBoundingBox( true );

wizardbase:setStrength( 10 )
wizardbase:setDexterity( 10 )
wizardbase:setVitality( 10 )
wizardbase:setIntellect( 25 )
wizardbase:setWisdom( 20 )
wizardbase:setMaxHealth( 150 )
wizardbase:setMaxMana( 100 )
wizardbase:setHealthRegen( 0 )
wizardbase:setManaRegen( 1 )
wizardbase:setMinDamage( 2 )
wizardbase:setMaxDamage( 3 )
wizardbase:setArmor( 10 )
wizardbase:setDamageModifierPoints( 0 )
wizardbase:setHitModifierPoints( 0 )
wizardbase:setEvadeModifierPoints( 0 )
wizardbase:setName("A wizard")
wizardbase:setWanderRadius( 250 )
wizardbase:setLevel( 2 )
wizardbase:setClass( CharacterClass.Liche )

spiderbase = DawnInterface.createNewMobType("Spider")
spiderbase:setNumMoveTexturesPerDirection( ActivityType.Walking, 8 );
for index=0,7,1 do
	spiderbase:setMoveTexture( ActivityType.Walking, N, index, "data/character/spider/walking n000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, NW, index, "data/character/spider/walking nw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, W, index, "data/character/spider/walking w000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, SW, index, "data/character/spider/walking sw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, S, index, "data/character/spider/walking s000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, SE, index, "data/character/spider/walking se000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, E, index, "data/character/spider/walking e000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Walking, NE, index, "data/character/spider/walking ne000"..index..".tga" );
end

spiderbase:setNumMoveTexturesPerDirection( ActivityType.Attacking, 9 );
for index=0,8,1 do
	spiderbase:setMoveTexture( ActivityType.Attacking, N, index, "data/character/spider/attacking n000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, NW, index, "data/character/spider/attacking nw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, W, index, "data/character/spider/attacking w000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, SW, index, "data/character/spider/attacking sw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, S, index, "data/character/spider/attacking s000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, SE, index, "data/character/spider/attacking se000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, E, index, "data/character/spider/attacking e000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Attacking, NE, index, "data/character/spider/attacking ne000"..index..".tga" );
end

spiderbase:setNumMoveTexturesPerDirection( ActivityType.Casting, 9 );
for index=0,8,1 do
	spiderbase:setMoveTexture( ActivityType.Casting, N, index, "data/character/spider/attacking n000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, NW, index, "data/character/spider/attacking nw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, W, index, "data/character/spider/attacking w000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, SW, index, "data/character/spider/attacking sw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, S, index, "data/character/spider/attacking s000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, SE, index, "data/character/spider/attacking se000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, E, index, "data/character/spider/attacking e000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Casting, NE, index, "data/character/spider/attacking ne000"..index..".tga" );
end

spiderbase:setNumMoveTexturesPerDirection( ActivityType.Dying, 11 );
for index=0,10,1 do
	spiderbase:setMoveTexture( ActivityType.Dying, N, index, "data/character/spider/dying n000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, NW, index, "data/character/spider/dying nw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, W, index, "data/character/spider/dying w000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, SW, index, "data/character/spider/dying sw000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, S, index, "data/character/spider/dying s000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, SE, index, "data/character/spider/dying se000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, E, index, "data/character/spider/dying e000"..index..".tga" );
	spiderbase:setMoveTexture( ActivityType.Dying, NE, index, "data/character/spider/dying ne000"..index..".tga" );
end

spiderbase:setStrength( 20 )
spiderbase:setDexterity( 30 )
spiderbase:setVitality( 20 )
spiderbase:setIntellect( 15 )
spiderbase:setWisdom( 15 )
spiderbase:setMaxHealth( 300 )
spiderbase:setMaxMana( 500 )
spiderbase:setMaxFatigue( 100 )
spiderbase:setHealthRegen( 0 )
spiderbase:setManaRegen( 50 )
spiderbase:setFatigueRegen( 25 )
spiderbase:setMinDamage( 8 )
spiderbase:setMaxDamage( 12 )
spiderbase:setArmor( 120 )
spiderbase:setDamageModifierPoints( 10 )
spiderbase:setHitModifierPoints( 10 )
spiderbase:setEvadeModifierPoints( 10 )
spiderbase:setName("Spider")
spiderbase:setWanderRadius( 250 )
spiderbase:setLevel( 2 )
spiderbase:setCoinDrop( 0, 0, 0.00 );
spiderbase:setClass( CharacterClass.Warrior );
spiderbase:inscribeSpellInSpellbook( spellDatabase["spiderbite"] );
spiderbase:inscribeSpellInSpellbook( spellDatabase["shardsofvenom"] );
spiderbase:inscribeSpellInSpellbook( spellDatabase["venomspit"] );

skeletonbase = DawnInterface.createNewMobType("Skeleton")
skeletonbase:setNumMoveTexturesPerDirection( ActivityType.Walking, 9 );
for index=0,8,1 do
	skeletonbase:setMoveTexture( ActivityType.Walking, N, index, "data/character/skeleton/walking n000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, NW, index, "data/character/skeleton/walking nw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, W, index, "data/character/skeleton/walking w000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, SW, index, "data/character/skeleton/walking sw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, S, index, "data/character/skeleton/walking s000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, SE, index, "data/character/skeleton/walking se000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, E, index, "data/character/skeleton/walking e000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Walking, NE, index, "data/character/skeleton/walking ne000"..index..".tga" );
end

skeletonbase:setNumMoveTexturesPerDirection( ActivityType.Attacking, 10 );
for index=0,9,1 do
	skeletonbase:setMoveTexture( ActivityType.Attacking, N, index, "data/character/skeleton/attacking n000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, NW, index, "data/character/skeleton/attacking nw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, W, index, "data/character/skeleton/attacking w000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, SW, index, "data/character/skeleton/attacking sw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, S, index, "data/character/skeleton/attacking s000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, SE, index, "data/character/skeleton/attacking se000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, E, index, "data/character/skeleton/attacking e000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Attacking, NE, index, "data/character/skeleton/attacking ne000"..index..".tga" );
end

skeletonbase:setNumMoveTexturesPerDirection( ActivityType.Casting, 10 );
for index=0,9,1 do
	skeletonbase:setMoveTexture( ActivityType.Casting, N, index, "data/character/skeleton/attacking n000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, NW, index, "data/character/skeleton/attacking nw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, W, index, "data/character/skeleton/attacking w000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, SW, index, "data/character/skeleton/attacking sw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, S, index, "data/character/skeleton/attacking s000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, SE, index, "data/character/skeleton/attacking se000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, E, index, "data/character/skeleton/attacking e000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Casting, NE, index, "data/character/skeleton/attacking ne000"..index..".tga" );
end

skeletonbase:setNumMoveTexturesPerDirection( ActivityType.Dying, 9 );
for index=0,8,1 do
	skeletonbase:setMoveTexture( ActivityType.Dying, N, index, "data/character/skeleton/dying n000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, NW, index, "data/character/skeleton/dying nw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, W, index, "data/character/skeleton/dying w000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, SW, index, "data/character/skeleton/dying sw000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, S, index, "data/character/skeleton/dying s000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, SE, index, "data/character/skeleton/dying se000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, E, index, "data/character/skeleton/dying e000"..index..".tga" );
	skeletonbase:setMoveTexture( ActivityType.Dying, NE, index, "data/character/skeleton/dying ne000"..index..".tga" );
end

skeletonbase:setStrength( 25 )
skeletonbase:setDexterity( 40 )
skeletonbase:setVitality( 45 )
skeletonbase:setIntellect( 10 )
skeletonbase:setWisdom( 10 )
skeletonbase:setMaxHealth( 250 )
skeletonbase:setMaxMana( 500 )
skeletonbase:setMaxFatigue( 100 )
skeletonbase:setHealthRegen( 0 )
skeletonbase:setManaRegen( 50 )
skeletonbase:setFatigueRegen( 25 )
skeletonbase:setMinDamage( 15 )
skeletonbase:setMaxDamage( 25 )
skeletonbase:setArmor( 200 )
skeletonbase:setDamageModifierPoints( 15 )
skeletonbase:setHitModifierPoints( 15 )
skeletonbase:setEvadeModifierPoints( 15 )
skeletonbase:setName("Skeleton")
skeletonbase:setWanderRadius( 250 )
skeletonbase:setLevel( 3 )
skeletonbase:setCoinDrop( 25, 75, 0.75 );
skeletonbase:setClass( CharacterClass.Warrior );

skeletonarcherbase = DawnInterface.createNewMobType("Skeleton Archer")
skeletonarcherbase:setNumMoveTexturesPerDirection( ActivityType.Walking, 8 );
for index=0,7,1 do
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, N, index, "data/character/skeletonarcher/walking n000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, NW, index, "data/character/skeletonarcher/walking nw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, W, index, "data/character/skeletonarcher/walking w000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, SW, index, "data/character/skeletonarcher/walking sw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, S, index, "data/character/skeletonarcher/walking s000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, SE, index, "data/character/skeletonarcher/walking se000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, E, index, "data/character/skeletonarcher/walking e000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Walking, NE, index, "data/character/skeletonarcher/walking ne000"..index..".tga" );
end

skeletonarcherbase:setNumMoveTexturesPerDirection( ActivityType.Attacking, 13 );
for index=0,12,1 do
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, N, index, "data/character/skeletonarcher/attacking n000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, NW, index, "data/character/skeletonarcher/attacking nw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, W, index, "data/character/skeletonarcher/attacking w000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, SW, index, "data/character/skeletonarcher/attacking sw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, S, index, "data/character/skeletonarcher/attacking s000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, SE, index, "data/character/skeletonarcher/attacking se000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, E, index, "data/character/skeletonarcher/attacking e000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Attacking, NE, index, "data/character/skeletonarcher/attacking ne000"..index..".tga" );
end

skeletonarcherbase:setNumMoveTexturesPerDirection( ActivityType.Casting, 13 );
for index=0,12,1 do
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, N, index, "data/character/skeletonarcher/attacking n000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, NW, index, "data/character/skeletonarcher/attacking nw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, W, index, "data/character/skeletonarcher/attacking w000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, SW, index, "data/character/skeletonarcher/attacking sw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, S, index, "data/character/skeletonarcher/attacking s000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, SE, index, "data/character/skeletonarcher/attacking se000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, E, index, "data/character/skeletonarcher/attacking e000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Casting, NE, index, "data/character/skeletonarcher/attacking ne000"..index..".tga" );
end

skeletonarcherbase:setNumMoveTexturesPerDirection( ActivityType.Shooting, 13 );
for index=0,12,1 do
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, N, index, "data/character/skeletonarcher/attacking n000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, NW, index, "data/character/skeletonarcher/attacking nw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, W, index, "data/character/skeletonarcher/attacking w000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, SW, index, "data/character/skeletonarcher/attacking sw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, S, index, "data/character/skeletonarcher/attacking s000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, SE, index, "data/character/skeletonarcher/attacking se000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, E, index, "data/character/skeletonarcher/attacking e000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Shooting, NE, index, "data/character/skeletonarcher/attacking ne000"..index..".tga" );
end

skeletonarcherbase:setNumMoveTexturesPerDirection( ActivityType.Dying, 9 );
for index=0,8,1 do
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, N, index, "data/character/skeletonarcher/dying n000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, NW, index, "data/character/skeletonarcher/dying nw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, W, index, "data/character/skeletonarcher/dying w000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, SW, index, "data/character/skeletonarcher/dying sw000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, S, index, "data/character/skeletonarcher/dying s000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, SE, index, "data/character/skeletonarcher/dying se000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, E, index, "data/character/skeletonarcher/dying e000"..index..".tga" );
	skeletonarcherbase:setMoveTexture( ActivityType.Dying, NE, index, "data/character/skeletonarcher/dying ne000"..index..".tga" );
end

skeletonarcherbase:setStrength( 25 )
skeletonarcherbase:setDexterity( 40 )
skeletonarcherbase:setVitality( 45 )
skeletonarcherbase:setIntellect( 10 )
skeletonarcherbase:setWisdom( 10 )
skeletonarcherbase:setMaxHealth( 250 )
skeletonarcherbase:setMaxMana( 500 )
skeletonarcherbase:setMaxFatigue( 100 )
skeletonarcherbase:setHealthRegen( 0 )
skeletonarcherbase:setManaRegen( 50 )
skeletonarcherbase:setFatigueRegen( 25 )
skeletonarcherbase:setMinDamage( 15 )
skeletonarcherbase:setMaxDamage( 25 )
skeletonarcherbase:setArmor( 200 )
skeletonarcherbase:setDamageModifierPoints( 15 )
skeletonarcherbase:setHitModifierPoints( 15 )
skeletonarcherbase:setEvadeModifierPoints( 15 )
skeletonarcherbase:setName("Skeleton Archer")
skeletonarcherbase:setWanderRadius( 250 )
skeletonarcherbase:setLevel( 3 )
skeletonarcherbase:setCoinDrop( 25, 75, 0.75 );
skeletonarcherbase:setClass( CharacterClass.Ranger );
skeletonarcherbase:inscribeSpellInSpellbook( spellDatabase["shoot"] );
skeletonarcherbase:addItemToLootTable( itemDatabase["weakenedbow"], 0.25 );
